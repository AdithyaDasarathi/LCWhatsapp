#!/usr/bin/env python3
"""
Setup script for LeetCode WhatsApp Agent
Helps users configure their environment and test the installation
"""

import os
import sys

def create_env_file():
    """Create a .env file with user input"""
    print("üîß Setting up your LeetCode WhatsApp Agent...")
    print("\nI'll help you create a .env configuration file.")
    print("You can get your Twilio credentials from: https://console.twilio.com/\n")
    
    # Get user input
    account_sid = input("Enter your Twilio Account SID: ").strip()
    auth_token = input("Enter your Twilio Auth Token: ").strip()
    
    print("\nFor WhatsApp numbers, use format: whatsapp:+1234567890")
    your_number = input("Enter your WhatsApp number: ").strip()
    
    print("\nScheduling options:")
    send_time = input("Daily send time (HH:MM, e.g., 09:00): ").strip() or "09:00"
    timezone = input("Your timezone (e.g., America/New_York): ").strip() or "America/New_York"
    
    # Create .env content
    env_content = f"""# LeetCode WhatsApp Agent Configuration
# Generated by setup.py

# Twilio WhatsApp API Configuration
TWILIO_ACCOUNT_SID={account_sid}
TWILIO_AUTH_TOKEN={auth_token}
TWILIO_WHATSAPP_FROM=whatsapp:+14155238886
YOUR_WHATSAPP_NUMBER={your_number}

# Scheduling Configuration
DAILY_SEND_TIME={send_time}
TIMEZONE={timezone}

# Database Configuration
DATABASE_PATH=leetcode_agent.db
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        print("\n‚úÖ Created .env file successfully!")
        return True
    except Exception as e:
        print(f"\n‚ùå Failed to create .env file: {e}")
        return False

def check_dependencies():
    """Check if all required packages are installed"""
    print("\nüì¶ Checking dependencies...")
    
    try:
        import requests
        import twilio
        import apscheduler
        import pytz
        from dotenv import load_dotenv
        print("‚úÖ All dependencies are installed")
        return True
    except ImportError as e:
        print(f"‚ùå Missing dependency: {e}")
        print("Please run: pip install -r requirements.txt")
        return False

def test_setup():
    """Test the agent setup"""
    print("\nüß™ Testing agent setup...")
    
    try:
        # Import and test the agent
        from leetcode_agent import LeetCodeAgent
        agent = LeetCodeAgent()
        
        if agent.test_setup():
            print("\nüéâ Setup complete! Your agent is ready to run.")
            print("\nNext steps:")
            print("1. To start the daily agent: python leetcode_agent.py")
            print("2. To send problems now: python leetcode_agent.py --once")
            print("3. To view statistics: python leetcode_agent.py --stats")
            return True
        else:
            print("\n‚ùå Setup test failed. Please check your configuration.")
            return False
            
    except Exception as e:
        print(f"\n‚ùå Setup test error: {e}")
        return False

def main():
    """Main setup function"""
    print("ü§ñ LeetCode WhatsApp Agent Setup")
    print("=" * 40)
    
    # Check if .env already exists
    if os.path.exists('.env'):
        overwrite = input("\n.env file already exists. Overwrite? (y/N): ").strip().lower()
        if overwrite != 'y':
            print("Keeping existing .env file...")
        else:
            if not create_env_file():
                return False
    else:
        if not create_env_file():
            return False
    
    # Check dependencies
    if not check_dependencies():
        return False
    
    # Test setup
    test_setup()

if __name__ == "__main__":
    main() 